---
import { getCollection } from 'astro:content';
import FormattedDate from './FormattedDate';

// Get the 3 most recent blog posts
const posts = (await getCollection('blog'))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
  .slice(0, 3);
---

{posts.length > 0 && (
  <div class="mt-12 lg:mt-16">
    <div class="mb-8 flex items-center justify-between">
      <h2 class="section-heading-underlined">Latest from the Blog</h2>
      <a 
        href="/blog"
        class="text-sm font-medium text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300"
      >
        View all posts â†’
      </a>
    </div>
    
    <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
      {posts.map((post) => (
        <article class="rounded-lg border border-gray-200 p-4 transition-shadow hover:shadow-md dark:border-dark-border dark:hover:shadow-lg">
          <div class="mb-2">
            <FormattedDate date={post.data.publishDate} />
          </div>
          
          <h3 class="mb-2">
            <a 
              href={`/blog/${post.slug}`}
              class="font-semibold text-light-text-heading hover:text-blue-600 dark:text-white dark:hover:text-blue-400"
            >
              {post.data.title}
            </a>
          </h3>
          
          <p class="mb-3 text-sm text-gray-600 dark:text-gray-300">
            {post.data.description}
          </p>
          
          <div class="flex items-center justify-between text-xs text-gray-500 dark:text-gray-400">
            <span>By {post.data.author}</span>
            {post.data.tags && post.data.tags.length > 0 && (
              <span class="rounded-full bg-gray-100 px-2 py-1 dark:bg-gray-800">
                {post.data.tags[0]}
              </span>
            )}
          </div>
        </article>
      ))}
    </div>
  </div>
)}